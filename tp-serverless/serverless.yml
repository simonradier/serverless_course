service: tp-serverless-2
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-3
  apiGateway:
    apiKeys:
      - test-tp
  iamRoleStatements:
    - Effect: Allow # On autorise
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !GetAtt todoTable.Arn
# Une fonction par API
functions:
  postTodoFunction:
    handler: post.handler
    events:
      - http:
          path: todo
          method: POST
          private: true
    environment:
      TABLE_NAME: !Ref todoTable
  getTodoFunction:
    handler: get.handler
    events:
      - http:
          path: todo/{id}
          method: GET
    environment:
      TABLE_NAME: !Ref todoTable
  geAlltTodoFunction:
    handler: get-all.handler
    events:
      - http:
          path: todo
          method: GET
    environment:
      TABLE_NAME: !Ref todoTable

resources:
  Resources:
    todoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: todoTable
        AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        KeySchema:
        - AttributeName: id
          KeyType: HASH
        BillingMode: PAY_PER_REQUEST
